##################################################
# DO Community Playbooks: LAMP on Ubuntu 18.04
##################################################
---
- hosts: web
  become: true
  vars_files:
    - vars/default.yml
    - vars/user_vars.yml

  tasks:
    - name: Install prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]

  #Apache Configuration
    - name: Install LAMP Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'apache2', 'mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]

    - name: Create document root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: "www-data"
        group: "www-data"
        mode: '0755'
      tags: [ apache ]

    - name: Set up Apache virtualhost
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
      notify: Reload Apache

    - name: Enable new site
      shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache

  # MySQL Configuration

    # # create root .my.cnf config file
    # - name: Add .my.cnf
    #   template: src=vars/my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600
    #   tags: [ mysql ]

    # # Set root password
    # # UPDATE mysql.user SET Password=PASSWORD('mysecret') WHERE User='root';
    # # FLUSH PRIVILEGES;

    # - name: Set root Password
    #   mysql_user: login_password={{ mysql_root_password }} check_implicit_admin=yes name=root host={{ item }} password={{ mysql_root_password }} state=present 
    #   with_items:
    #     - localhost
    #     - 127.0.0.1
    #     - ::1
    #   tags: [ mysql ]

    # - name: Reload privilege tables
    #   command: 'mysql -ne "{{ item }}"'
    #   with_items:
    #     - FLUSH PRIVILEGES
    #   changed_when: False
    #   tags: [ mysql ]

    # - name: Remove anonymous users
    #   command: 'mysql -ne "{{ item }}"'
    #   with_items:
    #     - DELETE FROM mysql.user WHERE User=''
    #   changed_when: False
    #   tags: [ mysql ]

    # - name: Disallow root login remotely
    #   command: 'mysql -ne "{{ item }}"'
    #   with_items:
    #     - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
    #   changed_when: False
    #   tags: [ mysql ]

    # - name: Remove test database and access to it
    #   command: 'mysql -ne "{{ item }}"'
    #   with_items:
    #     - DROP DATABASE IF EXISTS test
    #     - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
    #   changed_when: False
    #   tags: [ mysql ]

    # - name: Reload privilege tables
    #   command: 'mysql -ne "{{ item }}"'
    #   with_items:
    #     - FLUSH PRIVILEGES
    #   changed_when: False
    #   tags: [ mysql ]


    # # - name: Set MySQL root Password
    # #   mysql_user:
    # #     login_host: 'localhost'
    # #     login_user: 'root'
    # #     login_password: ''
    # #     name: 'root'
    # #     password: '{{ mysql_root_password }}'
    # #     state: present
    # #   tags: [ mysql ]
 
    # - name: Create MySQL user for WordPress
    #   mysql_user:
    #     name: "{{ mysql_user }}"
    #     password: "{{ mysql_password }}"
    #     priv: "{{ mysql_db }}.*:ALL"
    #     state: present
    #     login_user: root
    #     login_password: "{{ mysql_root_password }}"
    #   tags: [ mysql ]

    # - name: Creates database for WordPress
    #   mysql_db:
    #     name: "{{ mysql_db }}"
    #     state: present
    #     login_user: root
    #     login_password: "{{ mysql_root_password }}"
    #   tags: [ mysql ]


    # - name: Sets the root password
    #   mysql_user:
    #     name: root
    #     password: "{{ mysql_root_password }}"
    #     login_unix_socket: /var/run/mysqld/mysqld.sock
    #   tags: [ mysql ]

    # # - name: Removes all anonymous user accounts
    # #   mysql_user:
    # #     name: ''
    # #     host_all: yes
    # #     state: absent
    # #     login_user: root
    # #     login_password: "{{ mysql_root_password }}"
    # #   tags: [ mysql ]

    # - name: Removes the MySQL test database
    #   mysql_db:
    #     name: test
    #     state: absent
    #     login_user: root
    #     login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

  # UFW Configuration
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp

  # PHP Info Page
    - name: Sets Up PHP Info Page
      template:
        src: "files/info.php.j2"
        dest: "/var/www/{{ http_host }}/info.php"

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted